<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
	<meta name='generator' content='ExamView HTML Generator 1.0.5'>
	<meta name='robots' content='noindex,nofollow'>
	<title>Review 12 Inheritance</title>
	<style type='text/css'>
		.spacer { line-height:.7em; }
		.title { font-size:13pt; font-weight:bold; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qnumber { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; text-align:right; }
		.choice { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.default { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.qinfo { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		.points { font-size:8pt; font-family:"Times New Roman", "Times", serif; color:#000000; }
		TD.pad { padding: 0pt 4pt 0pt 4pt; }
		.font1 { font-family:"Times New Roman", "Times", serif; }
		.font2 { font-family:"courier new", "Courier", monospace; }
		.font3 { font-family:"courier new", "Courier", monospace; }
	</style>
<script type='text/javascript' language='JavaScript1.1'>
<!--
	// Copyright (c) 2000-2008 eInstruction Corp.
	var listMap = '11111111111111111111111111111111111111111111111111';
	var qtypeMap = '22222222222222222222222222222222222222222222222222';
	var ansMap = new Array(50);
	var ptsMap = new Array(50);
	ansMap[0] = 'B';
	ptsMap[0] = 1;
	ansMap[1] = 'D';
	ptsMap[1] = 1;
	ansMap[2] = 'A';
	ptsMap[2] = 1;
	ansMap[3] = 'B';
	ptsMap[3] = 1;
	ansMap[4] = 'D';
	ptsMap[4] = 1;
	ansMap[5] = 'C';
	ptsMap[5] = 1;
	ansMap[6] = 'B';
	ptsMap[6] = 1;
	ansMap[7] = 'C';
	ptsMap[7] = 1;
	ansMap[8] = 'B';
	ptsMap[8] = 1;
	ansMap[9] = 'A';
	ptsMap[9] = 1;
	ansMap[10] = 'B';
	ptsMap[10] = 1;
	ansMap[11] = 'E';
	ptsMap[11] = 1;
	ansMap[12] = 'E';
	ptsMap[12] = 1;
	ansMap[13] = 'B';
	ptsMap[13] = 1;
	ansMap[14] = 'D';
	ptsMap[14] = 1;
	ansMap[15] = 'D';
	ptsMap[15] = 1;
	ansMap[16] = 'C';
	ptsMap[16] = 1;
	ansMap[17] = 'E';
	ptsMap[17] = 1;
	ansMap[18] = 'A';
	ptsMap[18] = 1;
	ansMap[19] = 'A';
	ptsMap[19] = 1;
	ansMap[20] = 'E';
	ptsMap[20] = 1;
	ansMap[21] = 'E';
	ptsMap[21] = 1;
	ansMap[22] = 'D';
	ptsMap[22] = 1;
	ansMap[23] = 'A';
	ptsMap[23] = 1;
	ansMap[24] = 'A';
	ptsMap[24] = 1;
	ansMap[25] = 'D';
	ptsMap[25] = 1;
	ansMap[26] = 'B';
	ptsMap[26] = 1;
	ansMap[27] = 'E';
	ptsMap[27] = 1;
	ansMap[28] = 'C';
	ptsMap[28] = 1;
	ansMap[29] = 'E';
	ptsMap[29] = 1;
	ansMap[30] = 'C';
	ptsMap[30] = 1;
	ansMap[31] = 'E';
	ptsMap[31] = 1;
	ansMap[32] = 'E';
	ptsMap[32] = 1;
	ansMap[33] = 'A';
	ptsMap[33] = 1;
	ansMap[34] = 'A';
	ptsMap[34] = 1;
	ansMap[35] = 'A';
	ptsMap[35] = 1;
	ansMap[36] = 'B';
	ptsMap[36] = 1;
	ansMap[37] = 'C';
	ptsMap[37] = 1;
	ansMap[38] = 'A';
	ptsMap[38] = 1;
	ansMap[39] = 'A';
	ptsMap[39] = 1;
	ansMap[40] = 'E';
	ptsMap[40] = 1;
	ansMap[41] = 'C';
	ptsMap[41] = 1;
	ansMap[42] = 'C';
	ptsMap[42] = 1;
	ansMap[43] = 'C';
	ptsMap[43] = 1;
	ansMap[44] = 'E';
	ptsMap[44] = 1;
	ansMap[45] = 'B';
	ptsMap[45] = 1;
	ansMap[46] = 'D';
	ptsMap[46] = 1;
	ansMap[47] = 'A';
	ptsMap[47] = 1;
	ansMap[48] = 'C';
	ptsMap[48] = 1;
	ansMap[49] = 'C';
	ptsMap[49] = 1;
	function GradeIt(f)
	{
		var	MAGIC = 840;
		var	htmlUrl = window.location.href;
		var	studentName;
		var	totalCorrect = 0;
		var	totalPossible = 0;
		var	numCorrect = 0;
		var	numPossible = 0;
		var	numBlank = 0;
		var	numSubjective = 0;
		var	currentInstruction;
		var	currentNarrative;
		var	scorePercent;
		var	index;
		var	msg;
		var	text;
		var	i;
		var	showFeedback = false;
		var	showRef = false;
		var	numQuestions = 50;
		var	numInstructions = 1;
		var	numNarratives = 0;
		var	prefixText = new Array(50);
		var	numberText = new Array(50);
		var	questionText = new Array(50);
		var	answerText = new Array(50);
		var	responseText = new Array(50);
		var	feedbackText = new Array(50);
		var	refText = new Array(50);
		var	narrativeIndex = new Array(0);
		var	narrativeText = new Array(0);
		var	instructionIndex = new Array(1);
		var	instructionText = new Array(1);
		var	listMap = '11111111111111111111111111111111111111111111111111';
		var	titleString = 'Review 12 Inheritance';
		var	styleText = new Array(11);
		styleText[0] = '.spacer { line-height:.7em; }';
		styleText[1] = '.title { font-size:13pt; font-weight:bold; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[2] = '.qnumber { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; text-align:right; }';
		styleText[3] = '.choice { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[4] = '.default { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[5] = '.qinfo { font-size:12pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[6] = '.points { font-size:8pt; font-family:"Times New Roman", "Times", serif; color:#000000; }';
		styleText[7] = 'TD.pad { padding: 0pt 4pt 0pt 4pt; }';
		styleText[8] = '.font1 { font-family:"Times New Roman", "Times", serif }';
		styleText[9] = '.font2 { font-family:"courier new", "Courier", monospace }';
		styleText[10] = '.font3 { font-family:"courier new", "Courier", monospace }';
		instructionText[0] = '<div class=\'default\'><b>Multiple Choice</b><span style=\'font-size:10pt\'><br></span><i>Identify the choice ' +
'that best completes the statement or answers the question.</i></div>';
		instructionIndex[0] = 0;
		numberText[0] = '1.';
		questionText[0] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods ' +
'not shown<span class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void printIt() ' +
'<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp; ' +
'super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not ' +
'shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span class=\'font2\'>A x = new A();<br>out.print( ' +
'x.printIt() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>50</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>75</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>2550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>5050</span></span></td></tr></table></div>';
		answerText[0] = '<div class=\'default\'>B</div>';
		numberText[1] = '2.';
		questionText[1] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; public void printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods ' +
'not shown<span class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void ' +
'printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp; ' +
'super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not ' +
'shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span class=\'font2\'>A x = new B();<br>out.print( ' +
'x.printIt() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>50</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>75</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>2550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>5050</span></span></td></tr></table></div>';
		answerText[1] = '<div class=\'default\'>D</div>';
		numberText[2] = '3.';
		questionText[2] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods ' +
'not shown<span class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void ' +
'printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp; ' +
'super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not ' +
'shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span class=\'font2\'>B x = new B();<br>out.print( ' +
'x.printIt() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>2550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>75</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>50</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>5050</span></span></td></tr></table></div>';
		answerText[2] = '<div class=\'default\'>A</div>';
		numberText[3] = '4.';
		questionText[3] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods ' +
'not shown<span class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void printIt() ' +
'<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.printIt();<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(25);<br>&nbsp;&nbsp;&nbsp; super.printIt();<br>&nbsp; }<br>&nbsp; ' +
'<br></span>&nbsp;&nbsp; // other constructors and methods not shown<span ' +
'class=\'font2\'><br>}</span><br><br>//client code<br><span class=\'font2\'>B x = new B();<br>out.print( ' +
'x.printIt() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>5025</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>502550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>252525</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>2550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>7575</span></span></td></tr></table></div>';
		answerText[3] = '<div class=\'default\'>B</div>';
		numberText[4] = '5.';
		questionText[4] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods ' +
'not shown<span class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void ' +
'printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp; ' +
'super.printIt();<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp; }<br>&nbsp; ' +
'<br></span>&nbsp;&nbsp; // other constructors and methods not shown<span ' +
'class=\'font2\'><br>}</span><br><br>//client code<br><span class=\'font2\'>B x = new B();<br>out.print( ' +
'x.printIt() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>2550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>5025</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>502550</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>255025</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>755075</span></span></td></tr></table></div>';
		answerText[4] = '<div class=\'default\'>D</div>';
		numberText[5] = '6.';
		questionText[5] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int ' +
'getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp; ' +
'}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span ' +
'class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // ' +
'other constructors and methods not shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span ' +
'class=\'font2\'>A x = new A();<br>out.print( x.getCount() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>A</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>A1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>B1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>A2</span></span></td></tr></table></div>';
		answerText[5] = '<div class=\'default\'>C</div>';
		numberText[6] = '7.';
		questionText[6] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int ' +
'getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp; ' +
'}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span ' +
'class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // ' +
'other constructors and methods not shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span ' +
'class=\'font2\'>A x = new A();<br>x = new B();<br>x = new A();<br>out.print( x.getCount() ' +
');</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>ABA2</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>AABA3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>AB3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>ABA1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>BA3</span></span></td></tr></table></div>';
		answerText[6] = '<div class=\'default\'>B</div>';
		numberText[7] = '8.';
		questionText[7] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int ' +
'getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp; ' +
'}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span ' +
'class=\'font2\'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // ' +
'other constructors and methods not shown<span class=\'font2\'><br>}</span><br><br>//client code<br><span ' +
'class=\'font2\'>A x = new B();<br>x = new B();<br>x = new B();<br>out.print( x.getCount() ' +
');</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>ABA2</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>BBB3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>ABABAB3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>BBB1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>BA3</span></span></td></tr></table></div>';
		answerText[7] = '<div class=\'default\'>C</div>';
		numberText[8] = '9.';
		questionText[8] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class S ' +
'<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public ' +
'void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp; ' +
'}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; { ' +
'<br>&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void methodT() ' +
'<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>T t = new T(); <br>t.methodT();</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>U</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>USR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>RSU</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>SR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'>The code causes infinite ' +
'recursion.</span></td></tr></table></div>';
		answerText[8] = '<div class=\'default\'>B</div>';
		numberText[9] = '10.';
		questionText[9] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class S ' +
'<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public ' +
'void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp; ' +
'}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; { ' +
'<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void ' +
'methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>S s = new T(); <br>s.methodS();</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>U</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>USR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>RSU</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>SR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'>The code causes infinite ' +
'recursion.</span></td></tr></table></div>';
		answerText[9] = '<div class=\'default\'>A</div>';
		numberText[10] = '11.';
		questionText[10] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class S ' +
'<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public ' +
'void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp; ' +
'}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; { ' +
'<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void ' +
'methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>S s = new T(); <br>s.methodT();</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>U</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>USR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>RSU</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>SR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'>The code causes infinite ' +
'recursion.</span></td></tr></table></div>';
		answerText[10] = '<div class=\'default\'>B</div>';
		numberText[11] = '12.';
		questionText[11] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class S ' +
'<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public ' +
'void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp; ' +
'}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; { ' +
'<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void ' +
'methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp; ' +
'System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>S s = new S(); <br>s.methodS();</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>U</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>USR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>RSU</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>SR</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'>The code causes infinite ' +
'recursion.</span></td></tr></table></div>';
		answerText[11] = '<div class=\'default\'>E</div>';
		numberText[12] = '13.';
		questionText[12] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int ' +
'getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp; ' +
'public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; ' +
'public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public ' +
'int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>B b2 = new ' +
'B();<br>b2.set(12);<br>System.out.println(b2.get());</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>4</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>8</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>12</span></span></td></tr></table></div>';
		answerText[12] = '<div class=\'default\'>E</div>';
		numberText[13] = '14.';
		questionText[13] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int ' +
'getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp; ' +
'public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; ' +
'public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public ' +
'int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>B b2 = new ' +
'B();<br>b2.set(12);<br>System.out.println(b2.getIt());</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>4</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>8</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>12</span></span></td></tr></table></div>';
		answerText[13] = '<div class=\'default\'>B</div>';
		numberText[14] = '15.';
		questionText[14] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int ' +
'getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp; ' +
'public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; ' +
'public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public ' +
'int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>A it = new ' +
'A();<br>it.set(8);<br>System.out.println(it.getIt());</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>4</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>8</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>12</span></span></td></tr></table></div>';
		answerText[14] = '<div class=\'default\'>D</div>';
		numberText[15] = '16.';
		questionText[15] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int ' +
'getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp; ' +
'public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; ' +
'public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public ' +
'int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>A it = new ' +
'A();<br>it.set(8);<br>System.out.println(it.get());</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>4</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>8</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'>There is no output due to ' +
'a runtime error.</span></td></tr></table></div>';
		answerText[15] = '<div class=\'default\'>D</div>';
		numberText[16] = '17.';
		questionText[16] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Cat ' +
'<br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp; <br>&nbsp; ' +
'public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName = name;<br>&nbsp;&nbsp;&nbsp; ' +
'count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return catName + &quot; &quot; + count;<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>Cat x = new Cat(&quot;Tom&quot;);<br>System.out.println(x); </span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>Tom</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>Tabby 1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span class=\'font2\'>Tabby ' +
'2</span></span></td></tr></table></div>';
		answerText[16] = '<div class=\'default\'>C</div>';
		numberText[17] = '18.';
		questionText[17] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Cat ' +
'<br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp; <br>&nbsp; ' +
'public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName = name;<br>&nbsp;&nbsp;&nbsp; ' +
'count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return catName + &quot; &quot; + count;<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>Cat x = new Cat(&quot;Tom&quot;);<br>Cat y = new ' +
'Cat(&quot;Tabby&quot;);<br>System.out.println(y); </span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>Tom</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>Tabby 1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span class=\'font2\'>Tabby ' +
'2</span></span></td></tr></table></div>';
		answerText[17] = '<div class=\'default\'>E</div>';
		numberText[18] = '19.';
		questionText[18] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Cat ' +
'<br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp; <br>&nbsp; ' +
'public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName = name;<br>&nbsp;&nbsp;&nbsp; ' +
'count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return catName + &quot; &quot; + count;<br>&nbsp; }<br>}<br></span><br>//client code<span ' +
'class=\'font2\'><br>Cat x = new Cat(&quot;Tom&quot;);<br>Cat y = new Cat(&quot;Tabby&quot;);<br>Cat z = ' +
'new Cat(&quot;Tip&quot;);<br>System.out.println(z); </span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>Tip 3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 2</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>Tom 3</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>Tip 2</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span class=\'font2\'>Tabby ' +
'2</span></span></td></tr></table></div>';
		answerText[18] = '<div class=\'default\'>A</div>';
		numberText[19] = '20.';
		questionText[19] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>//client code<span class=\'font2\'><br>A a = new ' +
'A(10);<br>System.out.println(a.getXX()); </span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>5</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>20</span></span></td></tr></table></div>';
		answerText[19] = '<div class=\'default\'>A</div>';
		numberText[20] = '21.';
		questionText[20] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>//client code<span class=\'font2\'><br>A b = new ' +
'B(20);<br>System.out.println(b.getYY()); </span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>10</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>5</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>1</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>20</span></span></td></tr></table></div>';
		answerText[20] = '<div class=\'default\'>E</div>';
		numberText[21] = '22.';
		questionText[21] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following ' +
'statements are valid?<span class=\'font2\'><br>A a = new A(10);<br>A b = new B(20); ' +
'<br><br></span>I.<span class=\'font2\'><br>System.out.println( a.getXX() );<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println( b.getXX() );<br><br></span>III.<span ' +
'class=\'font2\'><br>System.out.println( b.addX(10) );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[21] = '<div class=\'default\'>E</div>';
		numberText[22] = '23.';
		questionText[22] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following ' +
'statements are valid?<span class=\'font2\'><br>A a = new A(10);<br>A b = new B(20); ' +
'<br><br></span>I.<span class=\'font2\'><br>System.out.println( a.addX(10) );<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println( b.addX(10) );<br><br></span>III.<span ' +
'class=\'font2\'><br>System.out.println( b.addY(10) );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[22] = '<div class=\'default\'>D</div>';
		numberText[23] = '24.';
		questionText[23] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following ' +
'statements are valid?<span class=\'font2\'><br>A a = new A(10);<br>A b = new B(20); ' +
'<br><br></span>I.<span class=\'font2\'><br>((B)b).addBtoA();<br><br></span>II.<span ' +
'class=\'font2\'><br>b.addBtoA();<br><br></span>III.<span ' +
'class=\'font2\'><br>a.addBtoA();</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[23] = '<div class=\'default\'>A</div>';
		numberText[24] = '25.';
		questionText[24] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>  private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following ' +
'statements are valid?<span class=\'font2\'><br>A b = new B(20); <br><br></span>I.<span ' +
'class=\'font2\'><br>System.out.println( ((B)b).getYY() );<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println( ((A)b).getYY() );<br><br></span>III.<span ' +
'class=\'font2\'><br>System.out.println( b.getYY() );</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr></table></div>';
		answerText[24] = '<div class=\'default\'>A</div>';
		numberText[25] = '26.';
		questionText[25] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br><br>A a = new A(14);<br>B b = new ' +
'B(33);<br>b.addBtoA();<br>System.out.println( b.getXX() );</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>14</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>33</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>1</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>34</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span style=\'font-size:10pt\'>There is no ' +
'output due to a syntax error.</span></span></td></tr></table></div>';
		answerText[25] = '<div class=\'default\'>D</div>';
		numberText[26] = '27.';
		questionText[26] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br><br>A a = new A(14);<br>B b = new ' +
'B(33);<br>b.addBtoA();<br>System.out.println( b.getYY() );</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>14</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>33</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>1</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>34</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span style=\'font-size:10pt\'>There is no ' +
'output due to a syntax error.</span></span></td></tr></table></div>';
		answerText[26] = '<div class=\'default\'>B</div>';
		numberText[27] = '28.';
		questionText[27] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class A ' +
'<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp; ' +
'}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp; ' +
'<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp; ' +
'public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends ' +
'A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy = ' +
'y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy += ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *= ' +
'y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp; ' +
'}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp; ' +
'addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following ' +
'statements are valid?<span class=\'font2\'><br>A a = new A(14);<br>B b = new ' +
'B(33);<br>b.addBtoA();<br>System.out.println( a.getYY() );</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>14</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>33</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>1</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'><span style=\'font-size:10pt\'>34</span></span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span style=\'font-size:10pt\'>There is no ' +
'output due to a syntax error.</span></span></td></tr></table></div>';
		answerText[27] = '<div class=\'default\'>E</div>';
		numberText[28] = '29.';
		questionText[28] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int ' +
'a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp; ' +
'age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int ' +
'a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp; ' +
'return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int ' +
'getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n) ' +
'{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name = ' +
'n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp; ' +
'super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public ' +
'void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; ' +
'}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public ' +
'void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the ' +
'following definitions, which of the following statements are valid?<span class=\'font2\'><br>Bird b = new ' +
'Bird(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span ' +
'class=\'font2\'><br>b.setAge(5);<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println(b.getName());<br><br></span>III.<span ' +
'class=\'font2\'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[28] = '<div class=\'default\'>C</div>';
		numberText[29] = '30.';
		questionText[29] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int ' +
'a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp; ' +
'age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int ' +
'a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp; ' +
'return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int ' +
'getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n) ' +
'{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name = ' +
'n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp; ' +
'super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public ' +
'void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; ' +
'}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public ' +
'void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the ' +
'following definitions, which of the following statements are valid?<span class=\'font2\'><br>Bird b = new ' +
'Bird(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span ' +
'class=\'font2\'><br>b.setAge(5);<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println(b.getAge());<br><br></span>III.<span ' +
'class=\'font2\'><br>((Wren)b).setName(&quot;BarnOwn&quot;);</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[29] = '<div class=\'default\'>E</div>';
		numberText[30] = '31.';
		questionText[30] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int ' +
'a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp; ' +
'age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int ' +
'a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp; ' +
'return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int ' +
'getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n) ' +
'{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name = ' +
'n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp; ' +
'super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public ' +
'void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; ' +
'}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public ' +
'void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the ' +
'following definitions, which of the following statements are valid?<span class=\'font2\'><br>Bird b = new ' +
'Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span ' +
'class=\'font2\'><br>b.setAge(5);<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println(b.getName());<br><br></span>III.<span ' +
'class=\'font2\'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[30] = '<div class=\'default\'>C</div>';
		numberText[31] = '32.';
		questionText[31] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int ' +
'a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp; ' +
'age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int ' +
'a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp; ' +
'return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int ' +
'getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n) ' +
'{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name = ' +
'n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp; ' +
'super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public ' +
'void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; ' +
'}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public ' +
'void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the ' +
'following definitions, which of the following statements are valid?<span class=\'font2\'><br>Bird b = new ' +
'Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span ' +
'class=\'font2\'><br>b.setAge(5);<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println(b.getAge());<br><br></span>III.<span ' +
'class=\'font2\'><br>((Wren)b).setName(&quot;BarnOwn&quot;);</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[31] = '<div class=\'default\'>E</div>';
		numberText[32] = '33.';
		questionText[32] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age; ' +
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' +
'<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int ' +
'a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp; ' +
'age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int ' +
'a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp; ' +
'return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int ' +
'getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird ' +
'<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n) ' +
'{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name = ' +
'n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp; ' +
'super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public ' +
'void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; ' +
'}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public ' +
'void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the ' +
'following definitions, which of the following statements are valid?<span class=\'font2\'><br>Wren b = new ' +
'Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span ' +
'class=\'font2\'><br>b.setAge(5);<br><br></span>II.<span ' +
'class=\'font2\'><br>System.out.println(b.getAge());<br><br></span>III.<span ' +
'class=\'font2\'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[32] = '<div class=\'default\'>E</div>';
		numberText[33] = '34.';
		questionText[33] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Pig ' +
'<br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int ' +
'num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2 ' +
');<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int ' +
'x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>Hog h = new Hog(30);<br>System.out.println(h.getIt());</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>30</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>15</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>10</span></span></td></tr></table></div>';
		answerText[33] = '<div class=\'default\'>A</div>';
		numberText[34] = '35.';
		questionText[34] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Pig ' +
'<br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int ' +
'num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2 ' +
');<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int ' +
'x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>Pig h = new Hog(30);<br>System.out.println(h.getIt());</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>30</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>15</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>10</span></span></td></tr></table></div>';
		answerText[34] = '<div class=\'default\'>A</div>';
		numberText[35] = '36.';
		questionText[35] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Pig ' +
'<br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int ' +
'num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2 ' +
');<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int ' +
'x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span ' +
'class=\'font2\'>Pig h = new Pig(30);<br>System.out.println(h.getIt());</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>30</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>0</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>15</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>10</span></span></td></tr></table></div>';
		answerText[35] = '<div class=\'default\'>A</div>';
		numberText[36] = '37.';
		questionText[36] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Pig ' +
'<br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int ' +
'num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2 ' +
');<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int ' +
'x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br><br>&nbsp; public int totalEm()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get() + super.get();<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>Hog h = new ' +
'Hog(30);<br>System.out.println(h.totalEm());</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>30</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>45</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>15</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>60</span></span></td></tr></table></div>';
		answerText[36] = '<div class=\'default\'>B</div>';
		numberText[37] = '38.';
		questionText[37] = '<div class=\'default\'>What is output by the following code?<br><br><span class=\'font2\'>public class Pig ' +
'<br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public ' +
'void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; ' +
'}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; ' +
'return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int ' +
'num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2 ' +
');<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int ' +
'x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br><br>&nbsp; public int totalEm()<br>&nbsp; ' +
'{<br>&nbsp;&nbsp;&nbsp; return get() + super.get();<br>&nbsp; }<br>}<br></span><br>//client ' +
'code<br><span class=\'font2\'>Hog h = new ' +
'Hog(30);<br>h.set(10);<br>System.out.println(h.totalEm());</span><br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'><span class=\'font2\'>30</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span class=\'default\'><span class=\'font2\'>45</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span class=\'default\'><span class=\'font2\'>25</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span class=\'default\'><span class=\'font2\'>15</span></span></td></tr><tr ' +
'valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span class=\'default\'><span ' +
'class=\'font2\'>60</span></span></td></tr></table></div>';
		answerText[37] = '<div class=\'default\'>C</div>';
		numberText[38] = '39.';
		questionText[38] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public abstract class ' +
'Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int f(int x){ <br>&nbsp;&nbsp;&nbsp; ' +
'return 2 * x;<br>&nbsp; }<br><br>&nbsp; public </span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 ' +
'&gt; </b>int g(int x);<br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font2\'>abstract<br></span><br>II.<br><span class=\'font2\'>final<br><br></span>III.<br><span ' +
'class=\'font2\'>static</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>II and III only</span></td></tr></table></div>';
		answerText[38] = '<div class=\'default\'>A</div>';
		numberText[39] = '40.';
		questionText[39] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public interface BigBang&nbsp; <br>{<br>&nbsp; ' +
'public </span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 &gt; </b>int g(int ' +
'x);<br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font2\'>abstract<br></span><br>II.<br><span class=\'font2\'>final<br><br></span>III.<br><span ' +
'class=\'font2\'>static</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>II and III only</span></td></tr></table></div>';
		answerText[39] = '<div class=\'default\'>A</div>';
		numberText[40] = '41.';
		questionText[40] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public abstract class ' +
'Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public </span></span><span ' +
'style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 &gt; </b>int HAL=9000;<br><br>&nbsp; public int ' +
'f(int x){ <br>&nbsp;&nbsp;&nbsp; return 2 * x;<br>&nbsp; }<br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font2\'>abstract<br></span><br>II.<br><span class=\'font2\'>final<br><br></span>III.<br><span ' +
'class=\'font2\'>static</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>II and III only</span></td></tr></table></div>';
		answerText[40] = '<div class=\'default\'>E</div>';
		numberText[41] = '42.';
		questionText[41] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public interface BigBang&nbsp; <br>{<br>&nbsp; ' +
'</span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 &gt; </b>double MULT = ' +
'98.34f;<br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font2\'>public<br></span><br>II.<br><span class=\'font2\'>final<br><br></span>III.<br><span ' +
'class=\'font2\'>private</span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II and III only</span></td></tr></table></div>';
		answerText[41] = '<div class=\'default\'>C</div>';
		numberText[42] = '43.';
		questionText[42] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public abstract class ' +
'Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; </span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 ' +
'&gt; </b><br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font3\'><span style=\'font-size:10pt\'>public Theory(int x){&nbsp;&nbsp; }</span></span><span ' +
'class=\'font2\'><br></span><br>II.<br><span class=\'font3\'><span style=\'font-size:10pt\'>private Theory(int ' +
'x){&nbsp;&nbsp; }</span></span><span class=\'font2\'><br><br></span>III.<br><span class=\'font3\'><span style=\'font-size:10pt\'>public final ' +
'Theory(int x){&nbsp;&nbsp; }</span></span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[42] = '<div class=\'default\'>C</div>';
		numberText[43] = '44.';
		questionText[43] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public interface BigBang&nbsp; <br>{<br>&nbsp; ' +
'</span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 &gt; ' +
'</b><br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font3\'><span style=\'font-size:10pt\'>double ABC = 100;</span></span><span ' +
'class=\'font2\'><br></span><br>II.<br><span class=\'font3\'><span style=\'font-size:10pt\'>public static final ' +
'double ABC = 100;</span></span><span class=\'font2\'><br><br></span>III.<br><span class=\'font3\'><span style=\'font-size:10pt\'>private double ' +
'ABC = 100;</span></span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II and III only</span></td></tr></table></div>';
		answerText[43] = '<div class=\'default\'>C</div>';
		numberText[44] = '45.';
		questionText[44] = '<div class=\'default\'>Which of the following could fill blank&nbsp; <b><span class=\'font3\'><span style=\'font-size:10pt\'>&lt; *1 &gt;</span></span></b> ' +
'?<br><br><span class=\'font3\'><span style=\'font-size:10pt\'>public abstract class ' +
'Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; </span></span><span style=\'font-size:10pt\'><span class=\'font3\'><b>&lt; *1 ' +
'&gt; </b><br></span></span><span class=\'font3\'><span style=\'font-size:10pt\'>}<br></span></span><br>I.<br><span ' +
'class=\'font3\'><span style=\'font-size:10pt\'>public Theory(int x){&nbsp;&nbsp; }</span></span><span ' +
'class=\'font2\'><br></span><br>II.<br><span class=\'font3\'><span style=\'font-size:10pt\'>public int go(int x){ ' +
'return x*5;&nbsp; }</span></span><span class=\'font2\'><br><br></span>III.<br><span class=\'font3\'><span style=\'font-size:10pt\'>private int ' +
'stop(){ return 887;&nbsp; }</span></span><br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>I only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>I and II only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>I and III only</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>I, II, and III only</span></td></tr></table></div>';
		answerText[44] = '<div class=\'default\'>E</div>';
		numberText[45] = '46.';
		questionText[45] = '<div class=\'default\'>Method overriding is an example of what?<br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>Static Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>Dynamic Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>Polymorphism</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>Encapsulation</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>all of the above</span></td></tr></table></div>';
		answerText[45] = '<div class=\'default\'>B</div>';
		numberText[46] = '47.';
		questionText[46] = '<div class=\'default\'>A Car class containing a Seatbelt class is an example of what?<br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>Static Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>Dynamic Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>Polymorphism</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>Encapsulation</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>all of the above</span></td></tr></table></div>';
		answerText[46] = '<div class=\'default\'>D</div>';
		numberText[47] = '48.';
		questionText[47] = '<div class=\'default\'>Classes accessing their variables are an example of what?<br></div><div ' +
'class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>Static Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>Dynamic Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>Polymorphism</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>Encapsulation</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>all of the above</span></td></tr></table></div>';
		answerText[47] = '<div class=\'default\'>A</div>';
		numberText[48] = '49.';
		questionText[48] = '<div class=\'default\'>Having a list of Cars containing a Mercedes and a Mustang is an example of ' +
'what?<br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>Static Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>Dynamic Binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>Polymorphism</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>Encapsulation</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>all of the above</span></td></tr></table></div>';
		answerText[48] = '<div class=\'default\'>C</div>';
		numberText[49] = '50.';
		questionText[49] = '<div class=\'default\'>Having a child method replace that of its parent is an example of ' +
'what?<br></div><div class=\'default\'><table cellpadding=\'0\' cellspacing=\'0\' width=\'95%\' border=\'0\'><tr valign=\'baseline\'><td width=\'4%\'><div class=\'choice\'>a.</div></td><td ' +
'width=\'96%\'><span class=\'default\'>Method overriding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>b.</div></td><td><span ' +
'class=\'default\'>Method overloading</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>c.</div></td><td><span ' +
'class=\'default\'>Dynamic binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>d.</div></td><td><span ' +
'class=\'default\'>static binding</span></td></tr><tr valign=\'baseline\'><td><div class=\'choice\'>e.</div></td><td><span ' +
'class=\'default\'>constructor overloading</span></td></tr></table></div>';
		answerText[49] = '<div class=\'default\'>C</div>';

		FixMR(f);
		FixMTF(f);
		index = 0;
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = StripSpaces(f.elements[i].options[listIndex].value);
				} else {
					f.elements[i].value = StripSpaces(f.elements[i].value);
					text = f.elements[i].value;
				}

				if (text.length == 0)
					++numBlank;
				++index;
			}
		}

		if (numBlank > 0) {
			if (numBlank == 1)
				msg = "1 question";
			else
				msg = numBlank + " questions";
			if (!confirm("You have not answered " + msg +
				"  Are you sure you want to end the test?"))
				return(false);
		}

		index = 0;
		var scoreDetails = new Array();
		for (i=0; i < f.length; ++i) {
			if (f.elements[i].name.indexOf(":") > 0) {
				if (listMap.charAt(index) == "1") {
					listIndex = f.elements[i].selectedIndex;
					text = f.elements[i].options[listIndex].value;
				} else
					text = f.elements[i].value;

				numPossible = ptsMap[index] * MAGIC;
				if (ansMap[index] == "") {
					scoreDetails[index] = "--";
					prefixText[index] = "<img src='review_12_inheritan_files/nograde.gif' align='middle'>";
					isCorrect = false;
					++numSubjective;
				} else {
					var scoreResult = ScoreAnswer(index, text, numPossible);
					numCorrect = scoreResult.numPoints;
					isCorrect = scoreResult.isCorrect;

					scoreDetails[index] = (Math.round(numCorrect * 100 / MAGIC) / 100).toString();
					prefixText[index] = BuildPrefixText(index, text, isCorrect);

					totalCorrect += numCorrect;
					totalPossible += numPossible;
				}

				if (showFeedback && feedbackText[index] != null && feedbackText[index].length > 0) {
					if (qtypeMap.charAt(index) == "2")
						feedbackIndex = text.charCodeAt(0) - 65;
					else
						feedbackIndex = (isCorrect) ? 0 : 1;
					feedbackText[index] = GetFeedback(feedbackText[index], feedbackIndex);
				}
				responseText[index] = TranslateHtmlString(text);

				scoreDetails[index] += " / " + (numPossible / MAGIC);
				++index;
			}
		}

		numCorrect = Math.round(totalCorrect * 100 / MAGIC) / 100;
		numPossible = Math.round(totalPossible * 100 / MAGIC) / 100;
		if (totalPossible > 0)
			scorePercent = Math.round(100.0 * totalCorrect / totalPossible);
		else
			scorePercent = 0;

		studentName = TranslateHtmlString(f.student_name.value);

		document.writeln("<html>\n<head>");
		document.writeln("<title>" + titleString + "</title>");
		document.writeln("<style type='text/css'>");
		for (i=0; i < styleText.length; ++i)
			document.writeln("\t" + styleText[i]);
		document.writeln("</style>\n</head>");

		document.writeln("<body bgcolor='#FFFFFF' style='background-image:url(review_12_inheritan_files/header.gif); background-repeat:no-repeat'>");
		document.writeln("<div style='font-size:12pt; font-family:\"Times New Roman\", \"Times\", serif; color:#000000;'>");

		document.writeln("<b>Name:</b> " + studentName + "<br>");
		document.write("<b>Score:</b> " + numCorrect + " / " + numPossible +
				" points (" + scorePercent + "%)");
		if (numSubjective > 0) {
			document.write("&nbsp;&nbsp;&nbsp;&nbsp; [" + numSubjective + " open-ended ");
			if (numSubjective == 1)
				document.write("question");
			else
				document.write("questions");
			document.write(" not graded]");
		}
		document.writeln("</div><br><br>");
		document.writeln("<div class='title'>" + titleString + "</div><br>");
		document.writeln("<table align='left' width='100%' border='0' cellpadding='0' cellspacing='0'>");

		currentInstruction = 0;
		currentNarrative = 0;
		for (i=0; i < numQuestions; ++i) {
			if (currentInstruction < numInstructions) {
				if (instructionIndex[currentInstruction] == i) {
					document.writeln("<tr><td colspan='3'><br>");
					document.writeln(instructionText[currentInstruction]);
					document.writeln("<div class='spacer'>&nbsp;</div>");
					document.writeln("</td></tr>");
					++currentInstruction;
				}
			}

			if (currentNarrative < numNarratives) {
				if (narrativeIndex[currentNarrative] == i) {
					document.writeln("<tr><td></td><td></td><td>");
					document.writeln(narrativeText[currentNarrative]);
					document.writeln("<div class='spacer'>&nbsp;</div>");
					document.writeln("</td></tr>");
					++currentNarrative;
				}
			}

			document.writeln("<tr valign='baseline'>");
			document.writeln("<td nowrap><p class='default'>" + prefixText[i] + "</p></td>");
			document.writeln("<td nowrap><p class='qnumber'>&nbsp;" + numberText[i] + "&nbsp;</p></td>");
			document.writeln("<td width='100%'>" + questionText[i]);
			document.writeln("<div style='font-size:2pt'></div><br>");
			document.writeln("<table width='100%' valign='baseline' cellpadding=0 cellspacing=0 border=0>");
			if (listMap.charAt(i) != "1") {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>RESPONSE:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + responseText[i] + "</p></td></tr>");
			}
			document.writeln("<tr valign='baseline'><td><p class='default'><b>ANSWER:&nbsp;</b></p></td>");
			document.writeln("<td width='100%'>" + answerText[i] + "</td></tr>");
			document.writeln("<tr valign='baseline'><td><p class='default'><b>POINTS:&nbsp;</b></p></td>");
			document.writeln("<td width='100%'>" + scoreDetails[i] + "</td></tr>");
			if (showFeedback && feedbackText[i] != null) {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>FEEDBACK:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + feedbackText[i] + "</p></td></tr>");
			}
			if (showRef) {
				document.writeln("<tr valign='baseline'><td><p class='default'><b>REF:&nbsp;</b></p></td>");
				document.writeln("<td width='100%'><p class='default'>" + refText[i] + "</p></td></tr>");
			}
			document.writeln("</table>");
			document.writeln("<div class='spacer'>&nbsp;</div></td></tr>");
		}

		document.writeln("</table>");
		document.writeln("<br clear='all'>");
		document.writeln("<table align='left' width='100%' cellpadding=0 cellspacing=0 border=0>");
		document.writeln("<tr><td bgcolor='#000000'><div style='font-size:1pt'>&nbsp;</div></td></tr>");
		document.write("<tr><td valign='top'><a href='" + htmlUrl + "'>");
		document.writeln("<img src='review_12_inheritan_files/retake.gif' border=0 alt='Retake Test'></a></td>");
		document.writeln("</tr></table>");

		document.writeln("</body>");
		document.writeln("</html>");
		document.close();

		return(false);
	}

	function BuildPrefixText(answerIndex, responseText, isCorrect)
	{
		var	text;
		var	listIndex;

		text = "<tt>"
		if (isCorrect)
			text += "<img src='review_12_inheritan_files/correct.gif' align='middle'>"
		else
			text += "<img src='review_12_inheritan_files/wrong.gif' align='middle'>"

		if (listMap.charAt(answerIndex) == "1") {
			if (responseText.length == 0)
				responseText = "&nbsp;";
			text += "&nbsp;<u>&nbsp;" + responseText + "&nbsp;</u>";
		}

		text += "</tt>"
		return(text);
	}

	function TranslateHtmlString(text)
	{
		var	newText;
		var	replaceString;
		var	position;
		var	length;
		var	breakPos;
		var	skipExtra;
		var	i;

		newText = "";
		position = 0;
		length = text.length;
		while (position < length) {
			skipExtra = 0;
			breakPos = -1;
			for (i=position; i < length && breakPos < 0; ++i) {
				switch(text.charAt(i)) {
					case '>':
						replaceString = "&gt;";
						breakPos = i;
						break;
					case '<':
						replaceString = "&lt;";
						breakPos = i;
						break;
					case '&':
						replaceString = "&amp;";
						breakPos = i;
						break;
					case '\r':
						if ((i + 1) < length && text.charAt(i + 1) == '\n')
							skipExtra = 1;
						replaceString = "<br>";
						breakPos = i;
						break;
					case '\n':
						replaceString = "<br>";
						breakPos = i;
						break;
					case ' ':
						if ((i + 1 < length) && text.charAt(i + 1) == ' ') {
							replaceString = "&nbsp;";
							breakPos = i;
						}
						break;
				}
			}

			if (breakPos < 0) {
				newText += text.substring(position, length);
				position = length;
			} else {
				if (breakPos > position)
					newText += text.substring(position, breakPos);
				newText += replaceString;
				position = breakPos + 1 + skipExtra;
			}
		}

		return(newText);
	}

	function GetFeedback(text, index)
	{
		var list = text.split("\t");
		if (index >= 0 && index < list.length)
			return(list[index]);
			
		return("");
	}

	function TranslateAnswer(s, answerIndex)
	{
		return(s);
	}

	function ScoreAnswer(answerIndex, responseText, pointsPossible)
	{
		var answerText = TranslateAnswer(ansMap[answerIndex], answerIndex);
		var qtype = qtypeMap.charAt(answerIndex);
		var nrExactMatch = false;
		var result = new Array();

		result.numPoints = 0;
		result.isCorrect = false;

		if (qtype == "3" && answerText.substring(0, 2) == "p:") {
			answerText = answerText.substr(2);
			if (responseText.toUpperCase() == answerText.toUpperCase())
				result.isCorrect = true;
			else
				result.numPoints = MultiResponseCompare(responseText, answerText, pointsPossible);
		} else if (qtype == "6") {
			if (answerText.substring(0, 2) == "==") {
				answerText = answerText.substr(2);
				nrExactMatch = true;
			}
			if (NumericCompare(responseText, answerText, nrExactMatch))
				result.isCorrect = true;
		} else if (qtype == "7") {
			if (CompletionCompare(responseText, answerText))
				result.isCorrect = true;
		} else if (responseText.toUpperCase() == answerText.toUpperCase())
			result.isCorrect = true;

		if (result.isCorrect)
			result.numPoints = pointsPossible;

		return(result);
	}

	function StripSpaces(s)
	{
		var	len;
		var	i;

		len = s.length;
		for (i=len - 1; i >= 0 && s.charAt(i) == " "; --i)
			len = i;

		if (len == 0)
			s = "";
		else if (len != s.length)
			s = s.substring(0, len);

		return(s);
	}

	function MultiResponseCompare(responseText, answerText, pointsPossible)
	{
	}

	function NumericCompare(response, answer, exactMatch)
	{
	}


	function CompletionCompare(responseText, answerText)
	{
		return(false);
	}

	function FixMTF(f)
	{
	}

	function FixMR(f)
	{
	}

	function AllowReset()
	{
		return(window.confirm("Do you want to clear all of your answers?"));
	}

	function Restart()
	{
		if (AllowReset()) {
			document.TestForm.onreset = function() { };
			document.TestForm.reset();
			document.TestForm.onreset = function() { AllowReset(); };
		}
	}
// -->
</script>
</head>
<body onResize='if(document.layers && navigator.appVersion.indexOf("Win") < 0){history.go(0);}'
bgcolor='#FFFFFF' style='background-image:url(review_12_inheritan_files/header.gif); background-repeat:no-repeat'>
<noscript>
	<h3><font color='#FF0000'>Javascript not enabled</font></h3>
</noscript>
<script type='text/javascript' language='JavaScript'>
<!--
if (navigator.appName.indexOf("Netscape") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Netscape Navigator version 4.0 or later.");
} else if (navigator.appName.indexOf("Explorer") >= 0) {
	if (parseInt(navigator.appVersion.charAt(0)) < 4)
		alert("This document requires Internet Explorer version 4.0 or later.");
}
// -->
</script>
<form name='TestForm' onReset='return(AllowReset())'>
<table align='left' width='100%' border='0' cellspacing='0'>
    <tr valign='top'>
	<td>
	    <div class='spacer'>&nbsp;</div>
	    <div class='default'>
	        <b>Name:</b>&nbsp;<input type='text' name='student_name' size='30'>
	    </div>
	    <div class='spacer'>&nbsp;</div>
	    <br>
	    <p class="title">Review 12 Inheritance</p>
	</td>
    </tr>
</table>
<br clear='all'>

<table align='left' width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr valign='top'>
	<td colspan='3'><br>
<div class='default'><b>Multiple Choice</b><span style='font-size:10pt'><br></span><i>Identify the
choice that best completes the statement or answers the question.</i></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:1' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;1.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods
not shown<span class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void
printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp;
super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not
shown<span class='font2'><br>}</span><br><br>//client code<br><span class='font2'>A x = new
A();<br>out.print( x.printIt() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>50</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>75</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>2550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>5050</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:2' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;2.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; public void printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods
not shown<span class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void
printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp;
super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not
shown<span class='font2'><br>}</span><br><br>//client code<br><span class='font2'>A x = new
B();<br>out.print( x.printIt() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>50</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>75</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>2550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>5050</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:3' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;3.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods
not shown<span class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void
printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp;
super.printIt();<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; // other constructors and methods not
shown<span class='font2'><br>}</span><br><br>//client code<br><span class='font2'>B x = new
B();<br>out.print( x.printIt() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>2550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>75</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>50</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>5050</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:4' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;4.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods
not shown<span class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void
printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.printIt();<br>&nbsp;&nbsp;&nbsp;
System.out.print(25);<br>&nbsp;&nbsp;&nbsp; super.printIt();<br>&nbsp; }<br>&nbsp;
<br></span>&nbsp;&nbsp; // other constructors and methods not shown<span
class='font2'><br>}</span><br><br>//client code<br><span class='font2'>B x = new B();<br>out.print(
x.printIt() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>5025</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>502550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>252525</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>2550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>7575</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:5' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;5.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; public void printIt() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
System.out.print(50);<br>&nbsp; }<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods
not shown<span class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public void
printIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp;&nbsp;&nbsp;
super.printIt();<br>&nbsp;&nbsp;&nbsp; System.out.print(25);<br>&nbsp; }<br>&nbsp;
<br></span>&nbsp;&nbsp; // other constructors and methods not shown<span
class='font2'><br>}</span><br><br>//client code<br><span class='font2'>B x = new B();<br>out.print(
x.printIt() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>2550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>5025</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>502550</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>255025</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>755075</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:6' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;6.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int
getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp;
}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span
class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; //
other constructors and methods not shown<span class='font2'><br>}</span><br><br>//client
code<br><span class='font2'>A x = new A();<br>out.print( x.getCount() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>A</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>A1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>B1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>A2</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:7' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;7.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int
getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp;
}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span
class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; //
other constructors and methods not shown<span class='font2'><br>}</span><br><br>//client
code<br><span class='font2'>A x = new A();<br>x = new B();<br>x = new A();<br>out.print( x.getCount()
);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>ABA2</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>AABA3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>AB3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>ABA1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>BA3</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:8' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;8.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private static int count;<br><br>&nbsp; public A()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
out.print(&quot;A&quot;);<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br><br>&nbsp; public int
getCount()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return count;<br>&nbsp;
}<br><br></span>&nbsp;&nbsp;&nbsp; // other constructors and methods not shown<span
class='font2'><br>}<br><br>public class B extends A<br>{<br>&nbsp; public B()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; out.print(&quot;B&quot;);<br>&nbsp; }<br>&nbsp; <br></span>&nbsp;&nbsp; //
other constructors and methods not shown<span class='font2'><br>}</span><br><br>//client
code<br><span class='font2'>A x = new B();<br>x = new B();<br>x = new B();<br>out.print( x.getCount()
);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>ABA2</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>BBB3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>ABABAB3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>BBB1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>BA3</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:9' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;9.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class S
<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public
void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp;
}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; {
<br>&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void methodT()
<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp;
System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>T t = new T(); <br>t.methodT();</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>U</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>USR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>RSU</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>SR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>The code causes infinite
recursion.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:10' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;10.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class S
<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public
void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp;
}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void
methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp;
System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>S s = new T(); <br>s.methodS();</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>U</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>USR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>RSU</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>SR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>The code causes infinite
recursion.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:11' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;11.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class S
<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public
void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp;
}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void
methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp;
System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>S s = new T(); <br>s.methodT();</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>U</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>USR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>RSU</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>SR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>The code causes infinite
recursion.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:12' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;12.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class S
<br>{<br>&nbsp; public void methodS() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
methodS();<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;S&quot;);<br>&nbsp; }<br> <br>&nbsp; public
void methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;T&quot;);<br>&nbsp;
}<br>}<br><br>public class T extends S <br>{<br>&nbsp; public void methodS() <br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp; System.out.print(&quot;U&quot;); <br>&nbsp; }<br> <br>&nbsp; public void
methodT() <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super.methodS();<br>&nbsp;&nbsp;&nbsp;
System.out.print(&quot;R&quot;);<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>S s = new S(); <br>s.methodS();</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>U</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>USR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>RSU</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>SR</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>The code causes infinite
recursion.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:13' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;13.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp;
public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp;
public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public
int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>B b2 = new
B();<br>b2.set(12);<br>System.out.println(b2.get());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>4</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>8</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>12</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:14' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;14.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp;
public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp;
public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public
int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>B b2 = new
B();<br>b2.set(12);<br>System.out.println(b2.getIt());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>4</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>8</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>12</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:15' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;15.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp;
public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp;
public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public
int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>A it = new
A();<br>it.set(8);<br>System.out.println(it.getIt());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>4</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>8</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>12</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:16' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;16.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>class B extends A <br>{<br>&nbsp; private int num;<br><br>&nbsp;
public int getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp;
public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public
int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>A it = new
A();<br>it.set(8);<br>System.out.println(it.get());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>4</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>8</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>There is no output due to a runtime
error.</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:17' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;17.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Cat <br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp;
<br>&nbsp; public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName =
name;<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString()
<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return catName + &quot; &quot; + count;<br>&nbsp;
}<br>}<br></span><br>//client code<br><span class='font2'>Cat x = new
Cat(&quot;Tom&quot;);<br>System.out.println(x); </span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>Tom</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span class='font2'>Tom
0</span></span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'><span class='font2'>Tom 1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span class='font2'>Tabby
1</span></span></td></tr><tr valign='baseline'><td><div class='choice'>e.</div></td><td><span
class='default'><span class='font2'>Tabby 2</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:18' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;18.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Cat <br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp;
<br>&nbsp; public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName =
name;<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString()
<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return catName + &quot; &quot; + count;<br>&nbsp;
}<br>}<br></span><br>//client code<br><span class='font2'>Cat x = new Cat(&quot;Tom&quot;);<br>Cat y
= new Cat(&quot;Tabby&quot;);<br>System.out.println(y); </span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>Tom</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span class='font2'>Tom
0</span></span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'><span class='font2'>Tom 1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span class='font2'>Tabby
1</span></span></td></tr><tr valign='baseline'><td><div class='choice'>e.</div></td><td><span
class='default'><span class='font2'>Tabby 2</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:19' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;19.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Cat <br>{<br>&nbsp; private String catName;<br>&nbsp; private static int count = 0;<br>&nbsp;
<br>&nbsp; public Cat(String name ) <br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; catName =
name;<br>&nbsp;&nbsp;&nbsp; count++;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public String toString()
<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return catName + &quot; &quot; + count;<br>&nbsp;
}<br>}<br></span><br>//client code<span class='font2'><br>Cat x = new Cat(&quot;Tom&quot;);<br>Cat y
= new Cat(&quot;Tabby&quot;);<br>Cat z = new Cat(&quot;Tip&quot;);<br>System.out.println(z);
</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>Tip 3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span class='font2'>Tom
2</span></span></td></tr><tr valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'><span class='font2'>Tom 3</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span class='font2'>Tip
2</span></span></td></tr><tr valign='baseline'><td><div class='choice'>e.</div></td><td><span
class='default'><span class='font2'>Tabby 2</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:20' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;20.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>//client code<span class='font2'><br>A a = new
A(10);<br>System.out.println(a.getXX()); </span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>5</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>20</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:21' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;21.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>//client code<span class='font2'><br>A b = new
B(20);<br>System.out.println(b.getYY()); </span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>10</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>5</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>1</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>20</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:22' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;22.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following
statements are valid?<span class='font2'><br>A a = new A(10);<br>A b = new B(20);
<br><br></span>I.<span class='font2'><br>System.out.println( a.getXX() );<br><br></span>II.<span
class='font2'><br>System.out.println( b.getXX() );<br><br></span>III.<span
class='font2'><br>System.out.println( b.addX(10) );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:23' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;23.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following
statements are valid?<span class='font2'><br>A a = new A(10);<br>A b = new B(20);
<br><br></span>I.<span class='font2'><br>System.out.println( a.addX(10) );<br><br></span>II.<span
class='font2'><br>System.out.println( b.addX(10) );<br><br></span>III.<span
class='font2'><br>System.out.println( b.addY(10) );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:24' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;24.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following
statements are valid?<span class='font2'><br>A a = new A(10);<br>A b = new B(20);
<br><br></span>I.<span class='font2'><br>((B)b).addBtoA();<br><br></span>II.<span
class='font2'><br>b.addBtoA();<br><br></span>III.<span
class='font2'><br>a.addBtoA();</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:25' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;25.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>  private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following
statements are valid?<span class='font2'><br>A b = new B(20); <br><br></span>I.<span
class='font2'><br>System.out.println( ((B)b).getYY() );<br><br></span>II.<span
class='font2'><br>System.out.println( ((A)b).getYY() );<br><br></span>III.<span
class='font2'><br>System.out.println( b.getYY() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I and III only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:26' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;26.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br><br>A a = new A(14);<br>B b = new
B(33);<br>b.addBtoA();<br>System.out.println( b.getXX() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'><span style='font-size:10pt'>14</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>33</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>1</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>d.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>34</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'><span
style='font-size:10pt'>There is no output due to a syntax
error.</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:27' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;27.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br><br>A a = new A(14);<br>B b = new
B(33);<br>b.addBtoA();<br>System.out.println( b.getYY() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'><span style='font-size:10pt'>14</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>33</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>1</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>d.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>34</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'><span
style='font-size:10pt'>There is no output due to a syntax
error.</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:28' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;28.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class A
<br>{<br>&nbsp; private int xx;<br><br>&nbsp; public A() { <br>&nbsp;&nbsp;&nbsp; xx = 1;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public A(int x) { <br>&nbsp;&nbsp;&nbsp; xx = x;<br>&nbsp;
}<br>&nbsp; <br>&nbsp; public void addX(int x) {<br>&nbsp;&nbsp;&nbsp; xx += x;<br>&nbsp; }<br>&nbsp;
<br>&nbsp; public void multX(int x) {<br>&nbsp;&nbsp;&nbsp; xx *= x;<br>&nbsp; }<br>&nbsp; <br>&nbsp;
public int getXX() {<br>&nbsp;&nbsp;&nbsp; return xx;<br>&nbsp; }<br>}<br><br>public class B extends
A <br>{<br>&nbsp; private int yy;<br><br>&nbsp; public B(int y) { <br>&nbsp;&nbsp;&nbsp; yy =
y;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp; public void addY(int y){<br>&nbsp;&nbsp;&nbsp; yy +=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public void multY(int y) {<br>&nbsp;&nbsp;&nbsp; yy *=
y;<br>&nbsp; }<br>&nbsp; <br>&nbsp; public int getYY() {<br>&nbsp;&nbsp;&nbsp; return yy;<br>&nbsp;
}&nbsp;&nbsp;&nbsp; <br>&nbsp; <br>&nbsp; public void addBtoA(){<br>&nbsp;&nbsp;&nbsp;
addX(yy);<br>&nbsp; }<br>}<br></span><br>Given the following definitions, which of the following
statements are valid?<span class='font2'><br>A a = new A(14);<br>B b = new
B(33);<br>b.addBtoA();<br>System.out.println( a.getYY() );</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'><span style='font-size:10pt'>14</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>b.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>33</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>1</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>d.</div></td><td><span class='default'><span
class='font2'><span style='font-size:10pt'>34</span></span></span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'><span
style='font-size:10pt'>There is no output due to a syntax
error.</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:29' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;29.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Bird <br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int
a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp;
age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public
String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int
a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp;
return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int
getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird
<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n)
{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name =
n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp;
super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public
void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp;
}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public
void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the
following definitions, which of the following statements are valid?<span class='font2'><br>Bird b =
new Bird(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span
class='font2'><br>b.setAge(5);<br><br></span>II.<span
class='font2'><br>System.out.println(b.getName());<br><br></span>III.<span
class='font2'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:30' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;30.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Bird <br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int
a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp;
age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public
String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int
a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp;
return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int
getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird
<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n)
{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name =
n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp;
super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public
void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp;
}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public
void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the
following definitions, which of the following statements are valid?<span class='font2'><br>Bird b =
new Bird(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span
class='font2'><br>b.setAge(5);<br><br></span>II.<span
class='font2'><br>System.out.println(b.getAge());<br><br></span>III.<span
class='font2'><br>((Wren)b).setName(&quot;BarnOwn&quot;);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:31' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;31.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Bird <br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int
a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp;
age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public
String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int
a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp;
return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int
getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird
<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n)
{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name =
n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp;
super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public
void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp;
}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public
void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the
following definitions, which of the following statements are valid?<span class='font2'><br>Bird b =
new Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span
class='font2'><br>b.setAge(5);<br><br></span>II.<span
class='font2'><br>System.out.println(b.getName());<br><br></span>III.<span
class='font2'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:32' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;32.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Bird <br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int
a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp;
age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public
String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int
a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp;
return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int
getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird
<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n)
{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name =
n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp;
super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public
void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp;
}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public
void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the
following definitions, which of the following statements are valid?<span class='font2'><br>Bird b =
new Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span
class='font2'><br>b.setAge(5);<br><br></span>II.<span
class='font2'><br>System.out.println(b.getAge());<br><br></span>III.<span
class='font2'><br>((Wren)b).setName(&quot;BarnOwn&quot;);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:33' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;33.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Bird <br>{<br>&nbsp; private String name;<br>&nbsp; private String sound;<br>&nbsp; private int age;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; private static int ID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public Bird() {<br>&nbsp;&nbsp;&nbsp; this(&quot;&quot;,&quot;&quot;,0);<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public Bird(String n, String s, int
a){<br>&nbsp;&nbsp;&nbsp; name=n; <br>&nbsp;&nbsp;&nbsp; sound=s; <br>&nbsp;&nbsp;&nbsp;
age=a;<br>&nbsp;&nbsp;&nbsp; ID += 1;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public
String getName(){ <br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public void setAge(int
a){ <br>&nbsp;&nbsp;&nbsp; age = a;<br>&nbsp; }<br>&nbsp; public int getAge(){ <br>&nbsp;&nbsp;&nbsp;
return age;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; }<br>&nbsp; public int
getId(){<br>&nbsp;&nbsp;&nbsp; return ID;<br>&nbsp; }<br>}<br><br>public class Wren extends Bird
<br>{<br>&nbsp; private String name;<br>&nbsp; <br>&nbsp; public Wren(String n)
{<br>&nbsp;&nbsp;&nbsp; super(&quot;Wren&quot;, &quot;cheery&quot;, 0);<br>&nbsp;&nbsp;&nbsp; name =
n;<br>&nbsp; }<br>&nbsp; public Wren(String n, String s, int a) {<br>&nbsp;&nbsp;&nbsp;
super(&quot;Wren&quot;, s, a);<br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp; }&nbsp; <br>&nbsp; public
void setName(String n)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;&nbsp;&nbsp; name = n;<br>&nbsp;
}<br>&nbsp; public String getName(){<br>&nbsp;&nbsp;&nbsp; return name;<br>&nbsp; }<br>&nbsp; public
void setAge(int a){ <br>&nbsp;&nbsp;&nbsp; setAge(a);<br>&nbsp; }<br>}<br></span><br>Given the
following definitions, which of the following statements are valid?<span class='font2'><br>Wren b =
new Wren(&quot;Owl&quot;,&quot;hoot&quot;,3);<br><br></span>I.<span
class='font2'><br>b.setAge(5);<br><br></span>II.<span
class='font2'><br>System.out.println(b.getAge());<br><br></span>III.<span
class='font2'><br>b.setName(&quot;BarnOwn&quot;);</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:34' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;34.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Pig <br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int
num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2
);<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int
x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>Hog h = new Hog(30);<br>System.out.println(h.getIt());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>30</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>15</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>10</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:35' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;35.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Pig <br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int
num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2
);<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int
x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>Pig h = new Hog(30);<br>System.out.println(h.getIt());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>30</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>15</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>10</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:36' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;36.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Pig <br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int
num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2
);<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int
x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br>}<br></span><br>//client code<br><span
class='font2'>Pig h = new Pig(30);<br>System.out.println(h.getIt());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>30</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>0</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>15</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>10</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:37' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;37.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Pig <br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int
num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2
);<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int
x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br><br>&nbsp; public int totalEm()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return get() + super.get();<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>Hog h = new
Hog(30);<br>System.out.println(h.totalEm());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>30</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>45</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>15</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>60</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:38' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;38.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>What is output by the following code?<br><br><span class='font2'>public class
Pig <br>{<br>&nbsp; private int num;<br><br>&nbsp; public Pig( int x )<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int
getIt()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; return get();<br>&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>&nbsp; public void set(int x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp;
}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp; public int get()<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp;
return num;<br>&nbsp; }<br>}<br><br>public class Hog extends Pig <br>{<br>&nbsp; private int
num;<br><br>&nbsp; public Hog( int x )<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; super( x / 2
);<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int getIt()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return super.getIt();<br>&nbsp; }<br><br>&nbsp; public void set(int
x)<br>&nbsp; {<br>&nbsp;&nbsp;&nbsp; num = x;<br>&nbsp; }<br><br>&nbsp; public int get()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return num;<br>&nbsp; }<br><br>&nbsp; public int totalEm()<br>&nbsp;
{<br>&nbsp;&nbsp;&nbsp; return get() + super.get();<br>&nbsp; }<br>}<br></span><br>//client
code<br><span class='font2'>Hog h = new
Hog(30);<br>h.set(10);<br>System.out.println(h.totalEm());</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'><span class='font2'>30</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'><span
class='font2'>45</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>c.</div></td><td><span class='default'><span
class='font2'>25</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'><span
class='font2'>15</span></span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'><span
class='font2'>60</span></span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:39' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;39.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public abstract class Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;
public int f(int x){ <br>&nbsp;&nbsp;&nbsp; return 2 * x;<br>&nbsp; }<br><br>&nbsp; public
</span></span><span style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt; </b>int g(int
x);<br></span></span><span class='font3'><span
style='font-size:10pt'>}<br></span></span><br>I.<br><span
class='font2'>abstract<br></span><br>II.<br><span class='font2'>final<br><br></span>III.<br><span
class='font2'>static</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>II and III only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:40' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;40.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public interface BigBang&nbsp; <br>{<br>&nbsp; public </span></span><span
style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt; </b>int g(int x);<br></span></span><span
class='font3'><span style='font-size:10pt'>}<br></span></span><br>I.<br><span
class='font2'>abstract<br></span><br>II.<br><span class='font2'>final<br><br></span>III.<br><span
class='font2'>static</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>II and III only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:41' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;41.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public abstract class Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;
public </span></span><span style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt; </b>int
HAL=9000;<br><br>&nbsp; public int f(int x){ <br>&nbsp;&nbsp;&nbsp; return 2 * x;<br>&nbsp;
}<br></span></span><span class='font3'><span
style='font-size:10pt'>}<br></span></span><br>I.<br><span
class='font2'>abstract<br></span><br>II.<br><span class='font2'>final<br><br></span>III.<br><span
class='font2'>static</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>III
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and II only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>II and III only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:42' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;42.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public interface BigBang&nbsp; <br>{<br>&nbsp; </span></span><span
style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt; </b>double MULT =
98.34f;<br></span></span><span class='font3'><span
style='font-size:10pt'>}<br></span></span><br>I.<br><span
class='font2'>public<br></span><br>II.<br><span class='font2'>final<br><br></span>III.<br><span
class='font2'>private</span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:43' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;43.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public abstract class Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;
</span></span><span style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt;
</b><br></span></span><span class='font3'><span
style='font-size:10pt'>}<br></span></span><br>I.<br><span class='font3'><span
style='font-size:10pt'>public Theory(int x){&nbsp;&nbsp; }</span></span><span
class='font2'><br></span><br>II.<br><span class='font3'><span style='font-size:10pt'>private
Theory(int x){&nbsp;&nbsp; }</span></span><span class='font2'><br><br></span>III.<br><span
class='font3'><span style='font-size:10pt'>public final Theory(int x){&nbsp;&nbsp;
}</span></span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:44' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;44.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public interface BigBang&nbsp; <br>{<br>&nbsp; </span></span><span
style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt; </b><br></span></span><span
class='font3'><span style='font-size:10pt'>}<br></span></span><br>I.<br><span class='font3'><span
style='font-size:10pt'>double ABC = 100;</span></span><span class='font2'><br></span><br>II.<br><span
class='font3'><span style='font-size:10pt'>public static final double ABC = 100;</span></span><span
class='font2'><br><br></span>III.<br><span class='font3'><span style='font-size:10pt'>private double
ABC = 100;</span></span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:45' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;45.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Which of the following could fill blank&nbsp; <b><span class='font3'><span
style='font-size:10pt'>&lt; *1 &gt;</span></span></b> ?<br><br><span class='font3'><span
style='font-size:10pt'>public abstract class Theory<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;
</span></span><span style='font-size:10pt'><span class='font3'><b>&lt; *1 &gt;
</b><br></span></span><span class='font3'><span
style='font-size:10pt'>}<br></span></span><br>I.<br><span class='font3'><span
style='font-size:10pt'>public Theory(int x){&nbsp;&nbsp; }</span></span><span
class='font2'><br></span><br>II.<br><span class='font3'><span style='font-size:10pt'>public int
go(int x){ return x*5;&nbsp; }</span></span><span class='font2'><br><br></span>III.<br><span
class='font3'><span style='font-size:10pt'>private int stop(){ return 887;&nbsp;
}</span></span><br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>I only</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>II only</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>I and II
only</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>I and III only</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>I, II, and III
only</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:46' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;46.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Method overriding is an example of what?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>Static Binding</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Dynamic Binding</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>Polymorphism</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>Encapsulation</span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'>all of the
above</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:47' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;47.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>A Car class containing a Seatbelt class is an example of what?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>Static Binding</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Dynamic Binding</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>Polymorphism</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>Encapsulation</span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'>all of the
above</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:48' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;48.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Classes accessing their variables are an example of what?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>Static Binding</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Dynamic Binding</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>Polymorphism</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>Encapsulation</span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'>all of the
above</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:49' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;49.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Having a list of Cars containing a Mercedes and a Mustang is an example of
what?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>Static Binding</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Dynamic Binding</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span
class='default'>Polymorphism</span></td></tr><tr valign='baseline'><td><div
class='choice'>d.</div></td><td><span class='default'>Encapsulation</span></td></tr><tr
valign='baseline'><td><div class='choice'>e.</div></td><td><span class='default'>all of the
above</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
<tr valign='baseline'>
	<td>
		<select name='MC:50' align='top' onmousewheel='return(false);'>
			<option value=' '> 
			<option value='A'>A
			<option value='B'>B
			<option value='C'>C
			<option value='D'>D
			<option value='E'>E
		</select>
	</td>
	<td>
		<p class='qnumber'>&nbsp;50.&nbsp;</p>
	</td>
	<td width='100%'>
<div class='default'>Having a child method replace that of its parent is an example of
what?<br></div>
<div class='default'><table cellpadding='0' cellspacing='0' width='95%' border='0'><tr
valign='baseline'><td width='4%'><div class='choice'>a.</div></td><td width='96%'><span
class='default'>Method overriding</span></td></tr><tr valign='baseline'><td><div
class='choice'>b.</div></td><td><span class='default'>Method overloading</span></td></tr><tr
valign='baseline'><td><div class='choice'>c.</div></td><td><span class='default'>Dynamic
binding</span></td></tr><tr valign='baseline'><td><div class='choice'>d.</div></td><td><span
class='default'>static binding</span></td></tr><tr valign='baseline'><td><div
class='choice'>e.</div></td><td><span class='default'>constructor
overloading</span></td></tr></table></div>
<div class='spacer'>&nbsp;</div>
	</td>
</tr>
</table>
<br clear='all'>
<br>
<br>
<table align='left' width='100%' cellpadding='0' cellspacing='0' border='0'>
<tr>
    <td bgcolor='#000000'>
	<div style='font-size:1pt'>&nbsp;</div>
    </td>
</tr>
<tr>
    <td><a href='javascript:alert("Use the mouse to submit.")'
	   onMouseOver='window.status = "Check Your Work"; return true'
	   onMouseOut='window.status = ""; return true'
	   onFocus='window.status = "Check Your Work"; return true'
	   onBlur='window.status = ""; return true'
	   onClick="return(GradeIt(document.forms[0]))">
	     <img src='review_12_inheritan_files/chkwork.gif' border='0' alt='Check Your Work'></a>
	&nbsp;&nbsp;&nbsp;
	<a href='#' onclick='Restart(); return false'>
	     <img src='review_12_inheritan_files/restart.gif' border='0' alt='Start Over'></a>
    </td>
</tr>
</table>
</form>
</body>
</html>